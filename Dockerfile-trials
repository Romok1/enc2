#FROM ubuntu:18.04
#FROM ruby:2.5.0
FROM node:12.18.3
RUN apt-get update && apt-get install -y curl nano vim build-essential yarn libpq-dev gnupg git  wget shared-mime-info libnss3-dev libgbm-dev

RUN rm /bin/sh && ln -s /bin/bash /bin/sh

# Define versions
ENV NVM_VERSION=0.38.0
ENV NODE_VERSION=12.9.0
ARG RVM_VERSION=2.6.3
ARG BUNDLER_VERSION=2.3.18

ENV RVM_VERSION=${RVM_VERSION}
ENV BUNDLER_VERSION=${BUNDLER_VERSION}
#ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \
#    PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser
# ENV PUPPETEER_SKIP_DOWNLOAD
# Install NVM
ENV NVM_DIR=/root/.nvm
RUN mkdir -p $NVM_DIR

RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash \
        && source $NVM_DIR/nvm.sh

# Fetch and install nodejs via nvm
RUN source $NVM_DIR/nvm.sh \
      && nvm install $NODE_VERSION \
      && nvm alias default $NODE_VERSION \
      && nvm use default

# Export NODE_PATH
ENV NODE_PATH $NVM_DIR/versions/node/v$NODE_VERSION/lib/node_modules

# Update PATH to make node/npm accessible
ENV PATH $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH

#Use npm to install yarn
RUN npm install -g yarn
#RUN npm i puppeteer --unsafe-perm --ignore-scripts
RUN npm g puppeteer
#RUN yarn add puppeteer

# Install RVM, Ruby, and Bundler
RUN curl -sSL https://get.rvm.io | bash -s
SHELL ["/bin/bash", "-l", "-c"]
RUN rvm requirements && rvm install ${RVM_VERSION} \
          && rvm use ${RVM_VERSION} \
          && gem install bundler -v ${BUNDLER_VERSION} --no-document
RUN \touch .bashrc
RUN echo 'source /etc/profile.d/rvm.sh' > .bashrc
CMD source ~/.rvm/scripts/rvm
ENV PATH $PATH:/usr/local/rvm/bin
CMD ["/bin/bash", "-l", "-c", "source ~/.rvm/scripts/rvm"]

# Create a user and group
#RUN addgroup -S wcmc
#RUN adduser -S -D -h /enc2 wcmc wcmc

RUN adduser --system --group --no-create-home wcmc
RUN usermod -aG sudo wcmc
ENV APP /enc2
RUN mkdir $APP
WORKDIR $APP

COPY package*.json yarn.lock ./
RUN yarn install 
#--frozen-lockfile

ADD Gemfile* $APP
#RUN bundle update mimemagic
#RUN bundle _${BUNDLER_VERSION}_ install
RUN bundle _${BUNDLER_VERSION}_ install

COPY . .
RUN chown -R wcmc:wcmc $APP

CMD ["rails","server","-b","0.0.0.0"]
